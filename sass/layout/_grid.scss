.row {
  // 1140px = 114rem because we set 1rem=10px
  // if we have enough available width, then the width will be 114rem
  // otherwise if the viewport is smaller than 114rem, the width will be 100% of available space
  max-width: $grid-width;
//  background-color: #eee;
  //center row(block element) in viewport
  margin: 0 auto;
  //select everything EXCEPT the last child
  &:not(:last-child) {
    margin-bottom: $gutter-vertical;
  }
  //insert clearfix mixin
  @include clearfix;
  //attribute selector will select all elements where the class name BEGINS with col-
  [class^="col-"] {
  //  background-color: orangered;
    //float the columns because we are using a float layout
    float: left;
    // margin on the right side of all columns except the last one
    &:not(:last-child) {
      margin-right: $gutter-horizontal;
    }
  }
  //Column 1 of 2
  .col-1-of-2 {
    //width of column is (100% of width - horizontal gutter) / 2
    width: calc((100% - #{$gutter-horizontal})/2);
  }
  //Column 1 of 3
  .col-1-of-3 {
    width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
  }
  //Column 2 of 3
  .col-2-of-3 {
    //width is 2 times the column 1 of 3 + the gutter
    width: calc(2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal});
  }
  //Column 1 of 4
  .col-1-of-4 {
    width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
  }
  //Column 2 of 4
  .col-2-of-4 {
    width: calc(2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal});
  }
  //Column 3 of 4
  .col-3-of-4 {
    width: calc(3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal});
  }
}
